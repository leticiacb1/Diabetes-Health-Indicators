name: Diabetes Health Indicators Workflow
on:
  push:
    branches:
      - main

env:
  AWS_LAMBDA_ROLE_ARN: ${{ secrets.AWS_LAMBDA_ROLE_ARN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  preprocess:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run preprocess function
        run: python -m src.preprocess

      - name: Upload generated files
        uses: actions/upload-artifact@v3
        with:
          name: preprocessed-data
          path: |
            data/diabetes_data.parquet
            data/diabetes_feature_data.parquet
            data/diabetes_target_data.parquet

  train:
    needs: preprocess
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Download generated files
        uses: actions/download-artifact@v3
        with:
          name: preprocessed-data
          path: ./data

      - name: Start MLflow server
        run: |
          nohup mlflow server --backend-store-uri postgresql://${{ secrets.DB_USERNAME}}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:5432/mlops_project_diabetes_db \
          --default-artifact-root s3://mlops-project-diabetes-tracking-bucket &
          sleep 20 

      - name: Train model
        run: python -m src.train

      - name: Upload generated files
        uses: actions/upload-artifact@v3
        with:
          name: train-data
          path: |
            models/logistic_regression.pickle
            results/confusion_matrix.png
            results/model_test_metrics.csv

  monitoring:
    needs: train
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Download generated files
        uses: actions/download-artifact@v3
        with:
          name: preprocessed-data
          path: ./data

      - name: Data drift analysis
        run: python -m src.monitoring.data_drift

  predict:
    needs: monitoring
    runs-on: ubuntu-latest
    env:
      ECR_NAME: mlops-project-diabetes-ecr
      REPOSITORY_URI:  ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.ECR_NAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Download model generated
        uses: actions/download-artifact@v3
        with:
          name: train-data
          path: ./models

      - name: Create Docker Container Repository
        run: |
             python -m src.utils.create_docker_container &
             sleep 60

      - name: Authenticate Docker with ECR
        run: |
         aws ecr get-login-password --region  ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.REPOSITORY_URI }}
      
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.REPOSITORY_URI }}:latest .
          docker push ${{ env.REPOSITORY_URI }}:latest

      - name: Deploy Lambda Function
        run: python -m src.utils.create_lambda_function

      - name: Create API Gateway
        run: python -m src.utils.create_api

  tests:
    needs: predict
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - run: echo "âš™ Install code dependencies ..."
      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: pytest